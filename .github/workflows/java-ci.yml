name: Java CI - Correr Pruebas de JUnit

on:
  push:
    branches: [ main, master ] # Se activa al subir a main o master

jobs:
  test-and-generate-report:
    runs-on: ubuntu-latest

    steps:
      - name: Descargar el repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Obtener informaci√≥n del commit
        id: commit_info
        run: |
          AUTHOR_NAME="${{ github.event.head_commit.author.name }}"
          AUTHOR_EMAIL="${{ github.event.head_commit.author.email }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_COUNT=$(git rev-list --count HEAD)
          
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

      - name: Ejecutar Pruebas de JUnit 5
        id: run_tests
        continue-on-error: true
        run: |
          set +e
          echo "üß™ Ejecutando tests de Java..."
          java -jar lib/junit-platform-console-standalone-1.9.3.jar -cp "src;tests" --scan-classpath > test_output.txt 2>&1
          TEST_EXIT_CODE=$?
          set -e

          cat test_output.txt

          TOTAL=$(grep 'tests found' test_output.txt | awk '{print $2}')
          PASSED=$(grep 'tests successful' test_output.txt | awk '{print $2}')
          FAILED=$(grep 'tests failed' test_output.txt | awk '{print $2}')
          
          TOTAL=${TOTAL:-0}
          PASSED=${PASSED:-0}
          FAILED=${FAILED:-0}

          echo "test_exit_code=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "tests_passed=$PASSED" >> $GITHUB_OUTPUT
          echo "tests_failed=$FAILED" >> $GITHUB_OUTPUT
          echo "tests_total=$TOTAL" >> $GITHUB_OUTPUT
          
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Todos los tests pasaron: $PASSED/$TOTAL"
          else
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "‚ùå Tests fallidos: $FAILED/$TOTAL"
          fi

      - name: Generar p√°gina de resultados HTML
        run: |
          cp template_reporte.html test_results.html
          
          STATUS="${{ steps.run_tests.outputs.status }}"
          AUTHOR="${{ steps.commit_info.outputs.author_name }}"
          EMAIL="${{ steps.commit_info.outputs.author_email }}"
          TIMESTAMP="${{ steps.commit_info.outputs.timestamp }}"
          COMMIT_MSG="${{ steps.commit_info.outputs.commit_message }}"
          COMMIT_NUM="${{ steps.commit_info.outputs.commit_count }}"
          PASSED="${{ steps.run_tests.outputs.tests_passed }}"
          TOTAL="${{ steps.run_tests.outputs.tests_total }}"

          # Escapar caracteres que rompen sed
          AUTHOR_ESC=$(echo "$AUTHOR" | sed 's/[|/&\\]/\\&/g')
          EMAIL_ESC=$(echo "$EMAIL" | sed 's/[|/&\\]/\\&/g')
          COMMIT_MSG_ESC=$(echo "$COMMIT_MSG" | sed 's/[|/&\\]/\\&/g')
          TIMESTAMP_ESC=$(echo "$TIMESTAMP" | sed 's/[|/&\\]/\\&/g')

          # Reemplazos usando siempre | como delimitador
          sed -i "s|{{STATUS}}|$STATUS|g" test_results.html
          sed -i "s|{{AUTHOR}}|$AUTHOR_ESC|g" test_results.html
          sed -i "s|{{EMAIL}}|$EMAIL_ESC|g" test_results.html
          sed -i "s|{{TIMESTAMP}}|$TIMESTAMP_ESC|g" test_results.html
          sed -i "s|{{COMMIT_MESSAGE}}|$COMMIT_MSG_ESC|g" test_results.html
          sed -i "s|{{COMMIT_COUNT}}|$COMMIT_NUM|g" test_results.html
          sed -i "s|{{TESTS_PASSED}}|$PASSED|g" test_results.html
          sed -i "s|{{TESTS_TOTAL}}|$TOTAL|g" test_results.html
          
          echo "‚úÖ P√°gina test_results.html generada."

      - name: Subir Artefactos
        uses: actions/upload-artifact@v4
        with:
          name: reporte-de-pruebas-${{ github.run_number }}
          path: |
            test_results.html
            test_output.txt
          retention-days: 7
