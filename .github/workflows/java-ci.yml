name: Ejecutar Tests y Generar Reporte

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Instalar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependencias
      run: |
        pip install pytest

    - name: Ejecutar Tests y capturar lista
      id: run_tests
      continue-on-error: true
      run: |
        set +e
        python -m pytest tests/test_person.py -v --tb=no > test_output.txt 2>&1
        EXIT=$?
        set -e

        PASSED=$(grep -c "PASSED" test_output.txt || echo "0")
        FAILED=$(grep -c "FAILED" test_output.txt || echo "0")
        TOTAL=$((PASSED + FAILED))

        PASSED_LIST=$(grep "PASSED" test_output.txt | sed 's/::/ - /')
        FAILED_LIST=$(grep "FAILED" test_output.txt | sed 's/::/ - /')

        echo "status=$([ $EXIT -eq 0 ] && echo success || echo failed)" >> $GITHUB_OUTPUT
        echo "tests_passed=$PASSED" >> $GITHUB_OUTPUT
        echo "tests_failed=$FAILED" >> $GITHUB_OUTPUT
        echo "tests_total=$TOTAL" >> $GITHUB_OUTPUT

        echo "passed_list<<EOF" >> $GITHUB_OUTPUT
        echo "$PASSED_LIST" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        echo "failed_list<<EOF" >> $GITHUB_OUTPUT
        echo "$FAILED_LIST" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Obtener datos del commit
      id: commit_info
      run: |
        echo "author_name=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
        echo "author_email=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_OUTPUT
        echo "commit_message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
        echo "timestamp=$(date)" >> $GITHUB_OUTPUT
        echo "commit_count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

    - name: Rellenar HTML
      run: |
        sed -i "s/{{AUTHOR}}/${{ steps.commit_info.outputs.author_name }}/g" index.html
        sed -i "s/{{EMAIL}}/${{ steps.commit_info.outputs.author_email }}/g" index.html
        sed -i "s/{{TIMESTAMP}}/${{ steps.commit_info.outputs.timestamp }}/g" index.html
        sed -i "s/{{COMMIT_MESSAGE}}/${{ steps.commit_info.outputs.commit_message }}/g" index.html
        sed -i "s/{{COMMIT_COUNT}}/${{ steps.commit_info.outputs.commit_count }}/g" index.html
        
        STATUS="${{ steps.run_tests.outputs.status }}"
        sed -i "s/{{STATUS}}/$STATUS/g" index.html
        
        sed -i "s/{{TESTS_PASSED}}/${{ steps.run_tests.outputs.tests_passed }}/g" index.html
        sed -i "s/{{TESTS_FAILED}}/${{ steps.run_tests.outputs.tests_failed }}/g" index.html
        sed -i "s/{{TESTS_TOTAL}}/${{ steps.run_tests.outputs.tests_total }}/g" index.html

        PASSED_HTML=$(echo "${{ steps.run_tests.outputs.passed_list }}" | sed 's/.*/<li class=\"pass\">&<\/li>/')
        FAILED_HTML=$(echo "${{ steps.run_tests.outputs.failed_list }}" | sed 's/.*/<li class=\"fail\">&<\/li>/')

        sed -i "s|{{PASSED_LIST}}|$PASSED_HTML|" index.html
        sed -i "s|{{FAILED_LIST}}|$FAILED_HTML|" index.html

    - name: Configurar Pages
      uses: actions/configure-pages@v3

    - name: Subir artefacto
      uses: actions/upload-pages-artifact@v2
      with:
        path: .

    - name: Deploy a GitHub Pages
      uses: actions/deploy-pages@v2
