name: Test y Deploy Java OOP Exercise

on:
  push:
    branches: [ master, main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Clonar el repositorio
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Instalar Java (ej. JDK 17)
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Compilar proyecto y descargar dependencias (Maven)
      - name: Build with Maven
        run: mvn clean compile

      # 4Ô∏è‚É£ Obtener informaci√≥n del commit
      - name: Obtener informaci√≥n del commit
        id: commit_info
        run: |
          AUTHOR_NAME="${{ github.event.head_commit.author.name }}"
          AUTHOR_EMAIL="${{ github.event.head_commit.author.email }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_COUNT=$(git rev-list --count HEAD)

          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

      # 5Ô∏è‚É£ Ejecutar tests con Maven (JUnit)
      - name: Ejecutar Tests de Java
        id: run_tests
        continue-on-error: true
        run: |
          echo "üß™ Ejecutando tests..."
          mvn test > test_output.txt 2>&1
          TEST_EXIT_CODE=$?

          # Contar tests pasados y fallidos
          PASSED=$(grep -oP '(?<=Tests run: )[0-9]+(?=, Failures: 0, Errors: 0)' test_output.txt || echo "0")
          FAILED=$(grep -oP '(?<=Failures: )[0-9]+' test_output.txt || echo "0")
          TOTAL=$((PASSED + FAILED))

          echo "test_exit_code=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "tests_passed=$PASSED" >> $GITHUB_OUTPUT
          echo "tests_failed=$FAILED" >> $GITHUB_OUTPUT
          echo "tests_total=$TOTAL" >> $GITHUB_OUTPUT

          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Todos los tests pasaron: $PASSED/$TOTAL"
          else
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "‚ùå Tests fallidos: $FAILED/$TOTAL"
          fi

      # 6Ô∏è‚É£ Generar reporte de errores
      - name: Generar reporte de errores (si fall√≥)
        if: steps.run_tests.outputs.status == 'failed'
        run: |
          cat > error_report.txt << 'EOF'
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ùå REPORTE DE ERROR - Tests Fallidos
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Desarrollador: ${{ steps.commit_info.outputs.author_name }}
Email: ${{ steps.commit_info.outputs.author_email }}
Fecha/Hora: ${{ steps.commit_info.outputs.timestamp }}
Intento #: ${{ steps.commit_info.outputs.commit_count }}
Mensaje del commit: "${{ steps.commit_info.outputs.commit_message }}"

üìä RESUMEN DE TESTS
Total de tests: ${{ steps.run_tests.outputs.tests_total }}
Tests pasados: ‚úÖ ${{ steps.run_tests.outputs.tests_passed }}
Tests fallidos: ‚ùå ${{ steps.run_tests.outputs.tests_failed }}

üîç DETALLES DEL ERROR
EOF
          cat test_output.txt >> error_report.txt
          cat error_report.txt

      # 7Ô∏è‚É£ Actualizar index.html con resultados
      - name: Actualizar index.html
        run: |
          STATUS="${{ steps.run_tests.outputs.status }}"
          AUTHOR="${{ steps.commit_info.outputs.author_name }}"
          EMAIL="${{ steps.commit_info.outputs.author_email }}"
          TIMESTAMP="${{ steps.commit_info.outputs.timestamp }}"
          COMMIT_MSG="${{ steps.commit_info.outputs.commit_message }}"
          COMMIT_NUM="${{ steps.commit_info.outputs.commit_count }}"
          PASSED="${{ steps.run_tests.outputs.tests_passed }}"
          TOTAL="${{ steps.run_tests.outputs.tests_total }}"

          AUTHOR_ESC=$(echo "$AUTHOR" | sed 's/[&/\]/\\&/g')
          EMAIL_ESC=$(echo "$EMAIL" | sed 's/[&/\]/\\&/g')
          COMMIT_MSG_ESC=$(echo "$COMMIT_MSG" | sed 's/[&/\]/\\&/g')

          sed -i "s/{{STATUS}}/$STATUS/g" index.html
          sed -i "s/{{AUTHOR}}/$AUTHOR_ESC/g" index.html
          sed -i "s/{{EMAIL}}/$EMAIL_ESC/g" index.html
          sed -i "s/{{TIMESTAMP}}/$TIMESTAMP/g" index.html
          sed -i "s/{{COMMIT_MESSAGE}}/$COMMIT_MSG_ESC/g" index.html
          sed -i "s/{{COMMIT_COUNT}}/$COMMIT_NUM/g" index.html
          sed -i "s/{{TESTS_PASSED}}/$PASSED/g" index.html
          sed -i "s/{{TESTS_TOTAL}}/$TOTAL/g" index.html

      # 8Ô∏è‚É£ Despliegue (Cloudflare Pages)
      - name: Publicar a Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: actions-ejemplo
          directory: ./

      # 9Ô∏è‚É£ Subir reporte como artifact si fall√≥
      - name: Subir reporte de errores
        if: steps.run_tests.outputs.status == 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: error-report-${{ github.run_number }}
          path: error_report.txt
          retention-days: 30
